@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@@model @Model.ViewDataTypeName

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = "@Model.ViewName";
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
@:<h2>Jay Create @Model.ViewName</h2>
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
@:<form asp-action="@Model.ViewName">
    @:<div class="form-horizontal">
        @:<h4>Jay Create @Model.ViewDataTypeShortName</h4>
        @:<hr />
        @:<div asp-validation-summary="ModelOnly" class="text-danger"></div>
    foreach (var property in Model.ModelMetadata.Properties)
    {
        if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly)
        {

            // If the property is a primary key and Guid, then the Guid is generated in the controller. Hence, this propery is not displayed on the view.
            if (property.IsPrimaryKey)
            {
                continue;
            }
            if (property.IsForeignKey)
            {
        @:<div class="form-group">
            @:<label asp-for="@property.PropertyName" class="col-md-2 control-label"></label>
            @:<div class="col-md-10">
                @:<select asp-for="@property.PropertyName" class ="form-control" asp-items="ViewBag.@property.PropertyName"></select>
            @:</div>
        @:</div>
                continue;
            }

            bool isCheckbox = property.TypeName.Equals("System.Boolean");
            if (isCheckbox)
            {
        @:<div class="form-group">
            @:<div class="col-md-offset-2 col-md-10">
                @:<div class="checkbox">
                    @:<input asp-for="@property.PropertyName" />
                    @:<label asp-for="@property.PropertyName"></label>
                @:</div>
            @:</div>
        @:</div>
            }
            else if (property.IsEnum && !property.IsEnumFlags)
            {
        @:<div class="form-group">
            @:<label asp-for="@property.PropertyName" class="col-md-2 control-label"></label>
            @:<div class="col-md-10">
                @:<select asp-for="@property.PropertyName" class="form-control"></select>
                @:<span asp-validation-for="@property.PropertyName" class="text-danger" />
            @:</div>
        @:</div>
            }
            else
            {
        @:<div class="form-group">
            @:<label asp-for="@property.PropertyName" class="col-md-2 control-label"></label>
            @:<div class="col-md-10">
                @:<input asp-for="@property.PropertyName" class="form-control" />
                @:<span asp-validation-for="@property.PropertyName" class="text-danger" />
            @:</div>
        @:</div>
            }
        }
    }
}
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@{
    if (Model.ReferenceScriptLibraries)
    {
@:@@section Scripts {
    @:@@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
@:}
    }
    // The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
    if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
@:</body>
@:</html>
    }
}
@functions
{
    // Do we need to use this in conjunction with the PrimaryKey check?
    bool IsPropertyGuid(PropertyMetadata property)
    {
        return string.Equals("System.Guid", property.TypeName, StringComparison.OrdinalIgnoreCase);
    }
}